//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MidTermClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Smartphone", Namespace="http://schemas.datacontract.org/2004/07/MidTerm")]
    [System.SerializableAttribute()]
    public partial class Smartphone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CpuSpeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RAMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int brandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cellularNetworkTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int simCardTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CpuSpeed {
            get {
                return this.CpuSpeedField;
            }
            set {
                if ((this.CpuSpeedField.Equals(value) != true)) {
                    this.CpuSpeedField = value;
                    this.RaisePropertyChanged("CpuSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RAM {
            get {
                return this.RAMField;
            }
            set {
                if ((this.RAMField.Equals(value) != true)) {
                    this.RAMField = value;
                    this.RaisePropertyChanged("RAM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int brandId {
            get {
                return this.brandIdField;
            }
            set {
                if ((this.brandIdField.Equals(value) != true)) {
                    this.brandIdField = value;
                    this.RaisePropertyChanged("brandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cellularNetworkTypeId {
            get {
                return this.cellularNetworkTypeIdField;
            }
            set {
                if ((this.cellularNetworkTypeIdField.Equals(value) != true)) {
                    this.cellularNetworkTypeIdField = value;
                    this.RaisePropertyChanged("cellularNetworkTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int simCardTypeId {
            get {
                return this.simCardTypeIdField;
            }
            set {
                if ((this.simCardTypeIdField.Equals(value) != true)) {
                    this.simCardTypeIdField = value;
                    this.RaisePropertyChanged("simCardTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllPhones", ReplyAction="http://tempuri.org/IService1/GetAllPhonesResponse")]
        string GetAllPhones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllPhones", ReplyAction="http://tempuri.org/IService1/GetAllPhonesResponse")]
        System.Threading.Tasks.Task<string> GetAllPhonesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewPhone", ReplyAction="http://tempuri.org/IService1/AddNewPhoneResponse")]
        void AddNewPhone(MidTermClient.ServiceReference1.Smartphone s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewPhone", ReplyAction="http://tempuri.org/IService1/AddNewPhoneResponse")]
        System.Threading.Tasks.Task AddNewPhoneAsync(MidTermClient.ServiceReference1.Smartphone s);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MidTermClient.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MidTermClient.ServiceReference1.IService1>, MidTermClient.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAllPhones() {
            return base.Channel.GetAllPhones();
        }
        
        public System.Threading.Tasks.Task<string> GetAllPhonesAsync() {
            return base.Channel.GetAllPhonesAsync();
        }
        
        public void AddNewPhone(MidTermClient.ServiceReference1.Smartphone s) {
            base.Channel.AddNewPhone(s);
        }
        
        public System.Threading.Tasks.Task AddNewPhoneAsync(MidTermClient.ServiceReference1.Smartphone s) {
            return base.Channel.AddNewPhoneAsync(s);
        }
    }
}
